* Theodore's Time and Battery Popups

** About

X11 windows to blink on key bindings,
even on top of full screen windows.
The user shouldn't need to shift their eyes.

[[./albatwid.png]]

[[./alclowid.png]]

The battery is yellow if charging.

A battery alarm is also easy to make.
Coming up with this idea wasn't easy.

#+begin_src sh
  while sleep 5; do albatwid -o 30; done &
#+end_src

** Usage

#+begin_src sh
  git clone https://github.com/TheodoreAlenas/widget-blink
  cd widget-blink
  make
  ./albatwid --help
  ./alclowid --help
#+end_src

Then tweaks to the c files and
~make try-albatwid~ or ~make try-alclowid~ repeatedly, finally

#+begin_src sh
  cp albatwid alclowid ~/.local/bin
#+end_src

if it's that easy. Otherwise,

#+begin_src sh
  sudo cp albatwid /usr/local/bin/
#+end_src

What I do is, I have this in my ~.xinitrc~

#+begin_src sh
  while sleep 5; do albatwid -o 50; done &
#+end_src

because my battery falls from 50% to zero suddenly.

I've bound ~Super + F~ to call ~albatwid~
and ~Super + J~ to call ~alclowid~,
on a system-wide level. You may want to look up
the key binding or "hotkey" configuration of your
Linux distribution to set it up.

** Inspiration

I used to have Python executables that acted similar,
and they looked nicer in comparison.
I included them in this repository, on second thought.
When I made them, I pulled off my first all nighter
which was scary in a way because I would think
the clock is showing the wrong time, I wasn't used
to being awake these times.

The battery had rounded corners
a thunder symbol when charging and
lines on 25% 50% and 75%.
The clock was a single clock with black, white and
red, and it would show an arc for how close
the minutes pointer was to an upcoming task.

The main problem with the python executables was that
they couldn't overlay full screen windows,
and generally their features weren't based off of
evidence or experience on what I need.
So I thought to take DMenu, another open source project,
and rip it apart to make this thing.
Ripping it was too hard so I squiggled around in it's code
and I tried copying minimal snippets and I pieced this
project together. It actually only took about one day
per executable.
